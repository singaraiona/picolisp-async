# HTTP server for Web.l
# (c) 2012 Jose I. Romero

(setq *StatusPrefix "HTTP/1.0 ")

(de server (P)
   (async-new-pool)
   (async-new-listener P http)
   (async-run) )

(de http (S)
   (use (@M @U @H L @K @V)
      (off *Host *Referer *Agent *Headers *Cookies *ContType)
      (zero *ContLen)
      (catch "http"
         (in S
            (unless (setq L (line))
               (task (close S))
               (off S)
               (throw "http") )
            (unless (match '(@M " " @U ~(chop " HTTP/1.") @H) L)
               (out S (httpStat 400 "Bad Request"))
               (task (close S))
               (off S)
               (throw "http") )
            (setq
               *Http1 (format @H)
               *ReqMethod (pack @M)
               *ReqUri @U
               *PathInfo (if (dec (index "?" @U)) (head @ @U) @U)
               *QueryString (if (- (index "?" @U)) (tail @ @U)) )
            (while (setq L (line))
               (unless (match '(@K ":" " " @V) L)
                  (out S (httpStat 400 "Bad request"))
                  (task (close S))
                  (off S)
                  (throw "http") )
               (case (lowc (pack @K))
                  ("host" (setq *Host @V))
                  ("referer" (setq *Referer @V))
                  ("cookie" (setq *Cookies @V) )
                  ("user-agent" (setq *Agent @V))
                  ("content-length" (setq *ContLen (format @V)))
                  ("content-type" (setq *ContType @V) )
                  (T (push '*Headers (cons @ @V))) ) )
            (setq *RemoteAddr *Adr)
            (setq *StatusPrefix (pack "HTTP/1." *Http1 " "))
            (if (n0 *Http1) (on *Chunked))
            (out S (proc-request)) ) ) )
   (and S (=0 *Http1) (task (close S))) )
